.release-build: &release-build
  - name: build-binaries
    script: sh .build/build-binaries.sh
  - name: remove release
    image: docker.cnb.cool/cnb/plugins/cnbcool/release-clean:latest
    if: |
      [ "${CI_REL_STAGING}" = "true" ]
    settings:
      filter: TAGNAME_PREFIX=${CI_REL_TAG}
      debug: false
  - name: remove tag
    image: alpine/git:latest
    if: |
      [ "${CI_REL_STAGING}" = "true" ]
    script: git push origin :refs/tags/${CI_REL_TAG}
  - name: changelog
    image: cnbcool/changelog
    exports:
      latestChangeLog: LATEST_CHANGE_LOG
  - name: git release
    type: git:release
    options:
      tag: ${CI_REL_TAG}
      latest: ${CI_REL_LATEST}
      preRelease: ${CI_REL_PRE_RELEASE}
      description: |
        # ${CI_REL_TAG} release
        ${LATEST_CHANGE_LOG}
  - name: push-binaries
    image: cnbcool/attachments:latest
    settings:
      tag: ${CI_REL_TAG}
      attachments:
        - "./out/*/*"

.release-rel-tag: &release-rel-tag
  docker:
    image: golang:1.20-alpine
    volumes:
      - main:/root/.cache/go-build:copy-on-write
  env:
    CI_REL_TAG: ${CNB_BRANCH}
    CI_REL_LATEST: true
    CI_REL_PRE_RELEASE: false
    CI_REL_STAGING: false
  stages: *release-build

.release-staging: &release-staging
  docker:
    image: golang:1.20-alpine
    volumes:
      - main:/root/.cache/go-build:copy-on-write
  env:
    CI_REL_TAG: staging
    CI_REL_LATEST: false
    CI_REL_PRE_RELEASE: true
    CI_REL_STAGING: true
  ifModify:
    - "**/*.go"
    - "go.mod"
    - ".build/*-binaries.sh"
  stages: *release-build

.sync-codebase: &sync-codebase
  docker:
    image: alpine/git:latest
  imports:
    - https://cnb.cool/viscropst/keystores/-/blob/main/corntron.env.yml
  stages:
    - name: preparing mirroring
      script: sh .build/mirror-preparing.sh
    - name: sync-to-gitcode
      script: sh .build/mirror-to-gitcode.sh
    - name: sync-to-github
      script: sh .build/mirror-to-github.sh
      
$:
  web_trigger_sync2other:
    - *sync-codebase
  vscode:
    - docker:
        build: 
          dockerfile: .ide/Dockerfile
          by:
            - .ide/extensions.json
            - .ide/languagepacks.json
            - .ide/user.argv.json
      services:
        - vscode
      stages:
        - name: ready
          type: vscode:go
        - name: go_mod_tidy
          script: go mod tidy
    

"rel-*":
  web_trigger_rebuild:
    - docker:
        image: golang:1.20-alpine
        volumes:
          - main:/root/.cache/go-build:copy-on-write
      env:
        CI_REL_TAG: ${CNB_BRANCH}
        CI_REL_LATEST: false
        CI_REL_PRE_RELEASE: false
        CI_REL_STAGING: false
      stages: *release-build
  tag_push:
    - *sync-codebase
    - *release-rel-tag

"main":
  push:
    - *sync-codebase
    - *release-staging
  web_trigger_rebuild:
    - docker:
        image: golang:1.20-alpine
        volumes:
          - main:/root/.cache/go-build:copy-on-write
      env:
        CI_REL_TAG: staging
        CI_REL_LATEST: false
        CI_REL_PRE_RELEASE: true
        CI_REL_STAGING: true
      stages: *release-build
