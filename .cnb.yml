.staging-build: &staging-build
  - name: build-binaries
    script: sh .build/build-binaries.sh
  - name: remove release
    image: docker.cnb.cool/cnb/plugins/cnbcool/release-clean:latest
    settings:
      filter: "TAGNAME_PREFIX=staging"
      debug: false
  - name: remove tag
    image: alpine/git:latest
    script: git push origin :refs/tags/staging
  - name: git release
    type: git:release
    options:
      tag: staging
      preRelease: true
      description: staging release
  - name: push-binaries
    
    image: cnbcool/attachments:latest
    settings:
      tag: staging
      attachments:
        - "./out/*/*"

.release-rel-tag: &release-rel-tag
  docker:
    image: golang:alpine
    volumes:
      - main:/root/.cache/go-build:copy-on-write
  stages:
    - name: build-binaries
      ifModify: 
        - "**/*.go"
        - "go.mod"
        - ".build/*-binaries.sh"
      script: sh .build/build-binaries.sh
    - name: changelog
      image: cnbcool/changelog
      ifModify: 
        - "**/*.go"
        - "go.mod"
        - ".build/*-binaries.sh"
      exports:
        latestChangeLog: LATEST_CHANGE_LOG
    - name: git release
      type: git:release
      ifModify: 
        - "**/*.go"
        - "go.mod"
        - ".build/*-binaries.sh"
      options:
        tag: ${CNB_BRANCH}
        latest: true
        description: ${LATEST_CHANGE_LOG}
    - name: push-binaries
      ifModify:
        - "**/*.go"
        - "go.mod"
        - ".build/*-binaries.sh"
      image: cnbcool/attachments:latest
      settings:
        tag: staging
        attachments:
          - "./out/*/*"

.release-staging: &release-staging
  docker:
    image: golang:alpine
    volumes:
      - main:/root/.cache/go-build:copy-on-write
  ifModify:
    - "**/*.go"
    - "go.mod"
    - ".build/*-binaries.sh"
  stages: *staging-build

.sync-codebase: &sync-codebase
  imports:
    - https://cnb.cool/viscropst/keystores/-/blob/main/corntron.env.yml
  stages:
    - name: sync-to-github
      image: tencentcom/git-sync:latest
      settings:
        target_url: git@github.com:viscropst/corntron.git
        auth-type: ssh
        ssh-key: ${SSH_PRIVATE_KEY}
    - name: sync-to-gitcode
      image: tencentcom/git-sync:latest
      settings:
        target_url: git@gitcode.com:viscropst/corntron.git
        auth-type: ssh
        ssh-key: ${SSH_PRIVATE_KEY}
      
$:
  push:
    - *sync-codebase
  web_trigger_sync2other:
    - *sync-codebase
  vscode:
    - docker:
        build: 
          dockerfile: .ide/Dockerfile
          by:
            - .ide/extensions.json
            - .ide/languagepacks.json
            - .ide/user.argv.json
      services:
        - vscode
      stages:
        - name: ready
          type: vscode:go
        - name: go_mod_tidy
          script: go mod tidy
    

"rel-*":
  tag_push:
    - *release-rel-tag

"main":
  push:
    - *release-staging
  web_trigger_rebuild:
    - docker:
        image: golang:alpine
        volumes:
          - main:/root/.cache/go-build:copy-on-write
      stages: *staging-build
